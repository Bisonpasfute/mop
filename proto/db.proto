syntax = "proto3";
package proto;

option go_package = "./proto";
import "common.proto";
import "spell.proto";

message SimDatabase {
	repeated SimItem items = 1;
	repeated ItemRandomSuffix random_suffixes = 5;
	repeated SimEnchant enchants = 2;
	repeated SimGem gems = 3;
	repeated ReforgeStat reforge_stats = 6;
	map<int32, QualityAllocations> random_prop_points = 7; // keyed by ilvl
	WeaponDamageDatabase weapon_damage_db = 8;
	ArmorValueDatabase armor_db = 9;
	repeated Consumable consumables = 10;
	repeated SpellEffect spell_effects = 11;
	repeated ItemArmorTotal armor_total_value = 12;
}

// Contains only the Item info needed by the sim.
message SimItem {
	int32 id = 1;
	string name = 2;

	ItemType type = 3;
	ArmorType armor_type = 4;
	WeaponType weapon_type = 5;
	HandType hand_type = 6;
	RangedWeaponType ranged_weapon_type = 7;

	repeated double stats = 8;
	repeated GemColor gem_sockets = 9;
	repeated double socketBonus = 10;

	double weapon_damage_min = 11;
	double weapon_damage_max = 12;
	double weapon_speed = 13;

	string set_name = 14;
	int32 rand_prop_points = 15 [deprecated = true]; // Possibly not needed after dbc scaling is in
	int32 set_id = 16;

	// Neccessary for scaling items in MoP
	double dmg_variance = 17;
	double armor_modifier = 18;
	double quality_modifier = 19;
	double socket_modifier = 20;
}

message Consumable {
	int32 id = 1;
	ConsumableType type = 2;
	repeated double stats = 3;
	bool buffs_main_stat = 4;
	string name = 5;
	string icon = 6;
	//In seconds
	int32 buff_duration = 7;
	repeated int32 effect_ids = 8;
}
message QualityValues {
  double common = 1;
  double uncommon = 2;
  double rare = 3;
  double epic = 4;
  double legendary = 5;
  double artifact = 6;
  double heirloom = 7;
}

message ItemQualityValue {
  int32 item_level = 1;
  QualityValues quality = 2;
}

message ItemArmorTotal {
  int32 item_level = 1;
	double cloth = 2;
	double leather = 3;
	double mail = 4;
	double plate = 5;
}

message QualityAllocations {
  repeated int32 good = 1;
  repeated int32 superior = 2;
  repeated int32 epic = 3;
}

message WeaponDamageDatabase {
    repeated ItemQualityValue caster_1h = 1;
    repeated ItemQualityValue melee_1h = 2;
    repeated ItemQualityValue caster_2h = 3;
    repeated ItemQualityValue melee_2h = 4;
    repeated ItemQualityValue ranged = 5;
    repeated ItemQualityValue thrown = 6;
    repeated ItemQualityValue wand = 7;
}

message ArmorValueDatabase {
	repeated ItemQualityValue shield_armor_values = 1; // shield
	repeated ItemQualityValue armor_values = 2; // armor
}
